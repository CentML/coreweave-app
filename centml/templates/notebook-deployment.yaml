apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: centml
spec:
  strategy:
    type: Recreate
  # Replicas controls the number of instances of the Pod to maintain running at all times
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: centml
          image: centml.tenant-centml-engineering.lga1.ingress.coreweave.cloud/centml:{{ .Values.imageTag }}
          ports:
            - name: notebook
              containerPort: 8888
              protocol: TCP
          args:
            - "demo"
          readinessProbe:
            tcpSocket:
              port: notebook
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: notebook
            initialDelaySeconds: 15
            periodSeconds: 15
            failureThreshold: 3
            timeoutSeconds: 10
          volumeMounts:
            - name: storage
              mountPath: /centml/notebooks

          resources:
            requests:
              cpu: 8 # The CPU unit is mili-cores. 500m is 0.5 cores
              memory: 8Gi
            limits:
              # GPUs can only be allocated as a limit, which both reserves and limits the number of GPUs the Pod will have access to
              # Making individual Pods resource light is advantageous for bin-packing. In the case of Jupyter, we stick to two GPUs for
              # demonstration purposes
              nvidia.com/gpu: 1
      affinity:
      {{ tpl (.Values.affinity | toYaml) $ | indent 2 }}
      # Node affinity can be used to require / prefer the Pods to be scheduled on a node with a specific hardware type
      # No affinity allows scheduling on all hardware types that can fulfill the resource request.
      # In this example, without affinity, any NVIDIA GPU would be allowed to run the Pod.
      # Read more about affinity at: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-storage
      restartPolicy: Always
